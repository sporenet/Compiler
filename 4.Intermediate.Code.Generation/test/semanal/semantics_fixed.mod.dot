digraph IR {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  // scope 'semantics'
  semantics_cb [label="semantics\r  0:     add    t0 <- 1, 2\l  1:     add    t1 <- t0, 3\l  2:     add    t2 <- 4, 5\l  3:     if     t1 > t2 goto 1_if_true\l  4:     goto   2_if_false\l  5: 1_if_true:\l  6:     add    t3 <- 1, 2\l  7:     assign x <- t3\l  8:     goto   0\l  9: 2_if_false:\l 10:     add    t4 <- 4, 5\l 11:     assign x <- t4\l 12: 0:\l",shape=box]
  // scope 'ProcedureCall'
  ProcedureCall_cb [label="ProcedureCall\r",shape=box]
  // scope 'Constants'
  Constants_cb [label="Constants\r  0:     assign a <- 1\l  1:     assign a <- 0\l  2:     goto   4\l  3:     assign t0 <- 1\l  4:     goto   5\l  5: 4:\l  6:     assign t0 <- 0\l  7: 5:\l  8:     assign a <- t0\l  9:     goto   8\l 10:     assign t1 <- 1\l 11:     goto   9\l 12: 8:\l 13:     assign t1 <- 0\l 14: 9:\l 15:     assign a <- t1\l 16:     assign t2 <- 1\l 17:     goto   13\l 18:     assign t2 <- 0\l 19: 13:\l 20:     assign a <- t2\l 21:     assign a <- 1\l 22:     assign t3 <- 1\l 23:     goto   18\l 24:     assign t3 <- 0\l 25: 18:\l 26:     assign a <- t3\l 27:     assign i <- 0\l 28:     assign i <- 0\l 29:     assign i <- 0\l 30:     assign i <- 0\l 31:     assign i <- -2147483648\l 32:     assign j <- 2147483647\l 33:     sub    t4 <- -2147483648, 1\l 34:     assign i <- t4\l 35:     add    t5 <- 2147483647, 2\l 36:     assign j <- t5\l 37:     goto   29\l 38:     assign t6 <- 1\l 39:     goto   30\l 40: 29:\l 41:     assign t6 <- 0\l 42: 30:\l 43:     assign a <- t6\l",shape=box]
  // scope 'UseBeforeDef'
  UseBeforeDef_cb [label="UseBeforeDef\r  0:     assign i <- j\l  1:     assign i <- k\l  2:     assign i <- x\l  3:     add    t0 <- x, y\l  4:     assign i <- t0\l  5:     assign i <- 0\l",shape=box]
  // scope 'MultipleDef'
  MultipleDef_cb [label="MultipleDef\r  0:     assign i <- 1\l",shape=box]
  // scope 'Parameters'
  Parameters_cb [label="Parameters\r  0:     param  1 <- p2\l  1:     param  0 <- p2\l  2:     call   Parameters\l  3:     param  1 <- 1\l  4:     param  0 <- 1\l  5:     call   Parameters\l  6:     add    t0 <- 3, 4\l  7:     param  1 <- t0\l  8:     add    t1 <- 1, 2\l  9:     param  0 <- t1\l 10:     call   Parameters\l 11:     param  1 <- 2\l 12:     param  0 <- 1\l 13:     call   Parameters\l 14:     param  1 <- 99999\l 15:     param  0 <- 1\l 16:     call   Parameters\l 17:     param  1 <- p1\l 18:     param  0 <- p2\l 19:     call   Parameters\l 20:     param  1 <- 2\l 21:     param  0 <- 1\l 22:     call   Parameters\l",shape=box]
  // scope 'Expressions'
  Expressions_cb [label="Expressions\r  0:     goto   2\l  1:     assign t0 <- 1\l  2:     goto   3\l  3: 2:\l  4:     assign t0 <- 0\l  5: 3:\l  6:     assign a <- t0\l  7:     if     1 # 0 goto 6\l  8:     goto   7\l  9: 6:\l 10:     assign t1 <- 1\l 11:     goto   8\l 12: 7:\l 13:     assign t1 <- 0\l 14: 8:\l 15:     assign a <- t1\l 16:     if     b = 1 goto 11\l 17:     if     c = 1 goto 12\l 18: 11:\l 19:     assign t2 <- 1\l 20:     goto   13\l 21: 12:\l 22:     assign t2 <- 0\l 23: 13:\l 24:     assign a <- t2\l 25:     if     i > j goto 16\l 26:     goto   17\l 27: 16:\l 28:     assign t3 <- 1\l 29:     goto   18\l 30: 17:\l 31:     assign t3 <- 0\l 32: 18:\l 33:     assign a <- t3\l 34:     if     b = 1 goto 22\l 35:     assign t4 <- 1\l 36:     goto   23\l 37: 22:\l 38:     assign t4 <- 0\l 39: 23:\l 40:     assign a <- t4\l 41:     if     a = 1 goto 28\l 42:     goto   26\l 43: 28:\l 44:     if     b = 1 goto 26\l 45:     assign t5 <- 1\l 46:     goto   27\l 47: 26:\l 48:     assign t5 <- 0\l 49: 27:\l 50:     assign a <- t5\l 51:     add    t6 <- j, k\l 52:     assign i <- t6\l 53:     div    t7 <- j, k\l 54:     mul    t8 <- t7, p1\l 55:     assign i <- t8\l 56:     neg    t9 <- j\l 57:     assign i <- t9\l 58:     add    t10 <- j, k\l 59:     assign i <- t10\l 60:     neg    t11 <- k\l 61:     add    t12 <- j, t11\l 62:     assign i <- t12\l 63:     if     a = 1 goto 41\l 64:     goto   38\l 65: 41:\l 66:     if     b = 1 goto 38\l 67:     if     i < j goto 39\l 68:     goto   38\l 69: 39:\l 70:     if     j < k goto 35\l 71: 38:\l 72:     if     i = k goto 35\l 73:     goto   36\l 74: 35:\l 75:     assign t13 <- 1\l 76:     goto   37\l 77: 36:\l 78:     assign t13 <- 0\l 79: 37:\l 80:     assign a <- t13\l",shape=box]
  // scope 'Assignments'
  Assignments_cb [label="Assignments\r  0:     if     i # j goto 1\l  1:     goto   2\l  2: 1:\l  3:     assign t0 <- 1\l  4:     goto   3\l  5: 2:\l  6:     assign t0 <- 0\l  7: 3:\l  8:     assign a <- t0\l  9:     assign a <- a\l 10:     add    t1 <- p1, p2\l 11:     add    t2 <- t1, p3\l 12:     add    t3 <- t2, p4\l 13:     add    t4 <- t3, i\l 14:     add    t5 <- t4, j\l 15:     add    t6 <- t5, k\l 16:     assign i <- t6\l",shape=box]
  // scope 'ProcReturn'
  ProcReturn_cb [label="ProcReturn\r",shape=box]
  // scope 'NoReturn'
  NoReturn_cb [label="NoReturn\r  0:     add    t0 <- 1, 2\l  1:     mul    t1 <- 3, 4\l  2:     div    t2 <- t1, 5\l  3:     sub    t3 <- t0, t2\l  4:     div    t4 <- 7, 8\l  5:     mul    t5 <- t4, 9\l  6:     sub    t6 <- 6, t5\l  7:     add    t7 <- t3, t6\l  8:     return t7\l",shape=box]
  // scope 'IntReturn'
  IntReturn_cb [label="IntReturn\r  0:     add    t0 <- 1, 2\l  1:     return t0\l",shape=box]
  // scope 'BoolReturn'
  BoolReturn_cb [label="BoolReturn\r  0:     if     1 > 2 goto 1\l  1:     goto   2\l  2: 1:\l  3:     assign t0 <- 1\l  4:     goto   3\l  5: 2:\l  6:     assign t0 <- 0\l  7: 3:\l  8:     return t0\l",shape=box]
  // scope 'If'
  If_cb [label="If\r  0:     add    t0 <- p1, p2\l  1:     add    t1 <- t0, p2\l  2:     if     t1 > p2 goto 3\l  3:     goto   2_if_false\l  4: 3:\l  5:     return \l  6:     goto   0\l  7: 2_if_false:\l  8:     return \l  9: 0:\l 10:     call   t2 <- BoolReturn\l 11:     if     t2 = 1 goto 8_if_true\l 12:     goto   9_if_false\l 13: 8_if_true:\l 14:     return \l 15:     goto   7\l 16: 9_if_false:\l 17:     return \l 18: 7:\l",shape=box]
  // scope 'While'
  While_cb [label="While\r  0: 1_while_cond:\l  1:     call   t0 <- BoolReturn\l  2:     if     t0 # 1 goto 2_while_body\l  3:     goto   0\l  4: 2_while_body:\l  5:     sub    t1 <- b, 1\l  6:     assign b <- t1\l  7:     goto   1_while_cond\l  8: 0:\l",shape=box]
};
